name: MDAL Win32 Github Build v2
on:
  workflow_dispatch:
  
jobs:
  windows_build:
    runs-on: windows-latest

    steps:
      - name: Checkout MDAL
        uses: actions/checkout@v2
        with:
          repository: 'Virgis-team/MDAL'
      
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}- }}

      - name: Install Conda
        uses: conda-incubator/setup-miniconda@v1.7.0
        with:
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
    
      - name: Install GDAL
        shell: pwsh
        run: conda install -c conda-forge gdal

      - name: Set compiler environment
        shell: cmd
        run: |
            CALL "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x86

      - name: Build
        shell: pwsh
        run: |
            $ErrorActionPreference = 'continue'
            function exec
            {
                param ( [ScriptBlock] $ScriptBlock )
                & $ScriptBlock 2>&1 | ForEach-Object -Process { "$_" }
                if ($LastExitCode -ne 0) { exit $LastExitCode }
            }
            cd $env:GITHUB_WORKSPACE
            mkdir build
            cd build
            exec { cmake -G "Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=Rel  -DENABLE_TESTS=ON  -DWITH_HDF5=OFF -DNETCDF_PREFIX="C:\Miniconda\envs\test\Library" -DHDF5_ROOT="C:\Miniconda\envs\test\Library" -DGDAL_DIR="C:\Miniconda\envs\test\Library" -DGDAL_LIBRARY="C:\Miniconda\envs\test\Library\lib\gdal_i.lib" -DGDAL_INCLUDE_DIR="C:\Miniconda\envs\test\Library\include" -DLIBXML2_LIBRARIES="C:\Miniconda\envs\test\Library\lib\libxml2.lib" -DLIBXML2_INCLUDE_DIR="C:\Miniconda\envs\test\Library\include\libxml2" ..  }
            exec { cmake --build . }
      - name: Run tests
        shell: pwsh
        run: |
            $ErrorActionPreference = 'continue'
            function exec
            {
                param ( [ScriptBlock] $ScriptBlock )
                & $ScriptBlock 2>&1 | ForEach-Object -Process { "$_" }
                if ($LastExitCode -ne 0) { exit $LastExitCode }
            }
            $env:PATH="$env:GITHUB_WORKSPACE\build\tool\Debug\;$env:GITHUB_WORKSPACE\build\mdal\Debug;$env:PATH"
            cd $env:GITHUB_WORKSPACE\build
            exec { ctest -VV --exclude-regex "mdalinfo_test" }
          
      - name: Copy mdal.dll
        shell: cmd
        run: |
          dir "$env:GITHUB_WORKSPACE\build"
          dir c:\
          copy /B "$env:GITHUB_WORKSPACE\build\mdal\Debug\mdal.dll" C:\
          
      - name: Checkout Local
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      - name: Update mdal.dll
        shell: cmd
        run: |
          copy /B C:\mdal.dll "$env:GITHUB_WORKSPACE\Assets\Plugins
          
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Add changes" -a
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          
